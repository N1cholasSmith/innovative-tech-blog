[
  {
    "name": "Ben Jorgenson",
    "title": "2021 Constellation Network ($DAG) - A new framework for blockchain businesses",
    "description": "Constellation provides a framework and network to tap into a digital economy. Our aim is to bridge real world data, business mechanics, rewards, with the power of immutable distributed ledger technology (blockchain) through the Constellation L_0 standard and microservice framework.<br>Constellation is a framework that allows everyone to build and conduct business on a blockchain. Existing blockchain technology does not support the speed, scalability, and economic incentive needed to build applications with robust business logic. Constellation is its own network and blockchain infrastructure. With Constellation’s L_0 state channel standard, you can define the rules of your business while tapping into Constellation’s Network, powered by rewards.<br>Entrepreneurs building applications in any industry can add blockchain like functionality and attach incentives to real world business metrics and outcomes. Like WordPress, we provide an open source framework with robust developer tools that anyone can build on. Constellation’s state channels are built on our L_0 standard. We provide data assurance tools and incentives while tapping into the unique capabilities of blockchain technology, providing immutability, security, auditability, and traceability. Constellation’s decentralized value-based network, called Hypergraph, is built for speed and scalability and leverages a reward layer that is used to maintain the network. Currently, Hypergraph supports millions of transactions a month and enables a feeless peer-to-peer network that is used to transport our cryptocurrency $DAG, which is validated by a reputation based consensus. As a microservices framework on a network powered by rewards, advanced business logic and data can be connected to our feeless and scalable network, governed and optimized by mathematical proofs.<br>Constellation is forging blockchain entrepreneurship through an ecosystem of businesses and state channels powered by $DAG utility. Constellation’s L_0 state channels are an evolution of smart contracts but provide robust business logic to create a new cryptocurrency standard, data assurance, traceability, and accountability to stakeholders.<br>Network Participants<br>Token Purchasers and Holders: These individuals have purchased $DAG, are speculating or trading and/or sending $DAG as a peer-to-peer currency between their wallets.Node Validators: These individuals manage nodes and receive $DAG as a reward for participating in Hypergraph and consensus. Consensus is the programmatic means to govern and optimize the network with speed and security. The collection of these nodes is distributed, and forms the Hypergraph.State Channel Businesses: Individuals and organizations can use the Constellation protocol HGTP to create unique businesses and tokens on the L_0 standard, with programmatic, automated and immutable business logic.<br>Opportunity<br>Traditional blockchains and ecosystems provide one metric to capture value on a value-based network: fees. This is programmed and pre-determined in traditional layer 1’s (base layer). This prevents the efficient transportation of data due to fluctuating and high fees for every application that builds on a fee driven base layer and thus limits the amount of currency sinks that are needed to drive a digital economy of the future. These networks are also slow and cumbersome and are not built to manage complex business logic to meet real world needs.Constellation’s Network, Hypergraph, and transportation protocol HGTP provide speed, security, and L_0 consensus with no base layer fees. Through the creation of state channels with advanced programmable business logic and a feeless peer-to-peer network, we provide a myriad of opportunities for anyone to develop a business that attracts value from the Constellation ecosystem — with economic incentives.Our aim is to attract the next blockchain entrepreneur to build a scalable business with confidence from multiple stakeholders that engage with the business.<br>Product L_0 StandardWordPress created a framework for developing websites and businesses on HTTP; Constellation provides the L_0 standard for anyone to create a blockchain based business with robust programmable logic on HGTP.Constellation will introduce the DAG Terminal — where anyone can download our client and create their own business built on a blockchain — Constellation’s Hypergraph. With the introduction of the Constellation L_0 Standard — a state channel/microservices framework — anyone will be able to validate data schemas and data sources, mint their own cryptocurrency, and attach business logic and metrics to their L_0. To create an L_0 application, $DAG will be required and may be procured in the ecosystem.In today’s cryptocurrency markets, there are too many random tokens that are created for public relations stunts. The L_0 token standard will allow purchasers and holders of an L_0 token to see the business mechanics. Token types will be designed by the creator of the L_0 token to attract purchasers and holders including “shared rewards” that relate to the success and utility of the token. We will provide predefined token types for the L_0 token creator.<br> Business Use CasesWith no more middlemen, you can simply deploy state channels and harness the power of blockchain, with business logic and incentives baked into your application. Constellation enables anyone to tap into a cryptocurrency ecosystem and integrate blockchain technology into existing systems and applications through our state channels and L_0 standard. Existing token standards allow you to create and mint a cryptocurrency, but have zero built-in accountability and business logic. Typical smart contracts are not integratable into existing systems and applications and only support simple data structures and logic with limited permissions. This is why Constellation provides a superior solution to standard …Use Cases:Data Validation: Secure a data source by adding immutability and auditability around customized state channels by defining the data schema (criteria).Example of L_0 token type: non-financialExample of business: IoT and connected devices that transfer data between servers.Shared Rewards: Put digital assets on chain and programmatically distribute rewards based on real world actions and outcomes. Align community and business stakeholders with business objectives.Example of L_0 token type: shared rewards or compound rewardsExample of business: An L_0 token and business that programmatically distributes rewards for staking an asset or partition of ownership.Digital Currency Wrapping: Wrap digital currencies to be compatible with other digital currencies ($DAG/Bitcoin) and supply liquidity for cross-chain ecosystems on the feeless Hypergraph network.Example of L_0 token type: Native pairingExample of business: Anyone looking to attract liquidity (an asset) to create a liquidity pool for cross-chain swapping.<br>Token Economy<br>The economic value or utility of a currency is its ability to conduct transactions within an economy. The U.S. dollar is a widely transacted currency across various economies as a value exchange. There are no transaction fees associated with transferring U.S. dollars beyond the mere value exchange for a service or product, unless another product or service is offered in between the value exchange (e.g. credit card processing fee for using a credit card company’s transaction protocol). $DAG is not a security and instead provides utility to engage in Constellation’s digital economy. By connecting the economies that exist on Constellation’s Hypergraph, there is a generative network effect in the relative price index of L_0 tokens — thus increasing overall network value.In order to create a L_0 token or state channel, you are required to purchase $DAG or deploy a node that receives rewards for maintaining the network and participating in consensus. $DAG is the main consensus layer in the network and state channels are applications built with $DAG.. Consensus cannot run without $DAG. If you take away $DAG, you take away the consensus layer.In our working example of the U.S. economy, banks that lend money charge a fee to people that borrow it for a myriad of uses (mortgages, business loans, personal loans, etc). The Federal Government is rather agnostic to how businesses are funded and instead lets banks and lenders build businesses around the use of capital while underwriting the risk and deciding who they want to lend money to.Like the U.S. economy, Constellation is agnostic to businesses created on Hypergraph, leaving it up to network participants to determine the best businesses to supply liquidity (capital) to. Through Constellation’s DAG Terminal, people can create state channels (businesses) using our L_0 standard. Business logic is integrated to encourage or discourage transactions in the economy through programmatic rewards tied to certain actions or behavior (e.g. revenue share through rewards).Wyatt Meldman-Floch’s “Generative Tokenomics’’ white paper provides mathematical proofs that ensure network stability and demonstrate how value can be transferred seamlessly throughout the Constellation ecosystem and other blockchain economies. This creates the programmatic means to develop cross-chain liquidity with zero transaction fees. By having feeless cross-chain transactions, we invite capital from other ecosystems and blockchain networks to participate and provide liquidity in the Constellation economy.<br>Summary<br>Constellation focuses on bridging real world data with the power of blockchain through state channels (L_0 standard). Constellation’s L_0 standard will allow anyone to develop business mechanics and rewards on a blockchain — a true evolution of the capabilities of digital currency.Hypergraph is a feeless decentralized network that supports the transfer of $DAG cryptocurrency.$DAG is required to maintain and run consensus on Hypergraph.State channels — an evolution of smart contracts — are programmatic deterministic applications that can be built on Hypergraph by utilizing $DAG.To build applications on Hypergraph, a business or individual must stake $DAG.Business logic and programmatic rewards can be added to state channel logic to attract participants in the network and createaccountability for all stakeholders.Cross-chain liquidity between the $DAG ecosystem and other cryptocurrency ecosystems provides additional liquidity and network participation to state channel businesses.Constellation’s cross-chain liquidity provides backwards compatibility to first and second generation blockchain ecosystems, allowing them to reap the benefits of using Hypergraph."
  },
  {
    "name": "Wyatt Meldmon-Floch",
    "title": "How Constellation is Different Than Blockchain",
    "description": "Over the past few years, Blockchain technology has taken the world by storm. It has been extended to a broader category of Distributed Ledger Technology (DLT). Constellation proposes an enterprise grade DLT that is scalable, secure, and inclusive. We recently published a detailed business whitepaper discussing our technology. In this post, we dive particularly into how the technology in Constellation is different than a traditional Blockchain.<br>In a Blockchain network, hundreds of thousands of computing devices create a distributed network without inherently trusting each other. They reach consensus about the shared data through unique mechanisms and ensure that once the consensus is reached, the data is tamper-proof. This allows the devices, otherwise known as nodes in the network, to transact, i.e. send tokens to each other. Tokens are the unit representation of the value created by the network, and fuels a shared economy in a secure digital network.<br>The technology behind Blockchain is ingenious. The transactions sent among the nodes are bundled together into Blocks of data. These blocks are chained in a fashion that the cryptographic hash of a previous block is included in the next block — making the entire Blockchain tamper-proof. A transaction is valid when the sender has enough tokens to send that transaction — analogous to having enough money in a bank account before sending someone money. Understandably, only valid transactions are allowed to be included in the block data. Since it is a network of nodes that virtually do not trust each other, transactions deemed valid by the majority of the nodes are selected to be valid. In a Blockchain network, this forces each transaction to be sent to every node, and requires a way to incentivize each node to do the right thing. The Bitcoin network famously mandates each node to solve a cryptographically challenging puzzle to provide the proof of honesty — tuned in a way that it does not make sense for a node to both burn enough electricity to solve the hard puzzle as well as act maliciously.<br>Regrettably, this entire process is too slow to be suited for mass adoption. Users are accustomed to Internet applications that are massively distributed with hundreds of thousands of concurrent users — transactions need to be verified in a matter of seconds, instead of hours. Constellation proposes a novel mechanism to improve upon the Blockchain technology with decades of learning from the scalable distributed technology. In this post, we would discuss some key ways Constellation is different than what is typically conceived as a Blockchain.<br>Network of Nodes<br>Like any standard Blockchain network, Constellation consists of a set of nodes that assumably do not trust each other. However, as in real life, some nodes may actually trust some other nodes — maybe they are from the same organization, or some nodes are globally trustworthy because of their branded reputation. Constellation takes this trust into the consensus mechanism in a unique way — more on that in the later sections.<br>In a mining-oriented Blockchain, each participant has two potential roles to play — a user who mostly transacts tokens, or a miner who mostly mints new tokens. This often results in a two-directional economy inside the network as their incentives may not always align. Also, the power in a Blockchain, especially one that requires computationally heavy mining, gets concentrated to the nodes that are computationally strong and backed by financially powerful entities. Constellation, on the other hand, eliminates the mining mechanism and is open to all types of devices, from low-key mobile devices to high-end servers.<br>In Blockchain, each node is not necessarily directly connected to all other nodes — as it is with Constellation. When needed, a node sends a transaction to a handful of connected nodes (usually less than 10), and the transaction is spread through a gossip protocol. In Constellation, transactions are also spread through the network by a unique gossip protocol, but not necessarily to all nodes in the network. The data flown also bears more complexity, but more on that later.<br>The distance among the nodes bears importance in Constellation. The distance is defined by multiple factors, such as the geographic distance along node IPs, transitive distance of trust imposition (more on trust later), and repeated communication. When a transaction is submitted, it is gossiped to different parts of the network defined by this distance, so that the randomness and the complex distance factor minimizes the possibility of collusion among the nodes to verify a particular transaction.<br>Data flow in the network<br>In Constellation, data flows in bundles. Any unit of data in Constellation is a Bundle and Bundles are differentiated by rank. A transaction is a rank-0 Bundle, a checkpoint block is a rank-1 Bundle and Bundles after rank-1 are referred to as a ‘rank-n Bundle’. A bundle of size n includes a set of bundles of rank n-1. As the term Bundle naturally evokes the idea of items bundled together. In the case of transactions, we can think of them as a fiber, or as the single indivisible unit of data. Bundles of rank n>= 1 are formed from a collection of unconfirmed data of preceding rank taken from a mempool, signature data for those transactions, and reference to two other Bundles of the same rank. The signatory data includes the information (timestamps, node identifiers etc.) about all nodes that sign the transactions.<br>Blocks in a traditional Blockchain vs Constellation’s Bundles (seen here as checkpoint blocks)<br>A Bundle is reused multiple times as a pointer from one Bundle to another. We call number of acceptable reuses the ‘tip factor’. As Bundles are observed and gossiped around, its hash will inevitably change between the reuse. Keeping in mind the data and network optimization, we store these different versions of Bundle hashes as observation edges. One way to visualize observation edges are as leaves in a trie with the bundle being the parent. The trie itself is part of the Directed Acyclic Graph (DAG) of observations — also called the observation-dependency DAG (OD-DAG). The observation edges originating from a bundle form a trie, embedded inside the DAG data structure of OD-DAG.<br>A snapshot is a special kind of bundle that includes data and pointers to all previous bundles till the earlier snapshot. Snapshots give a clear view of the state of the network at any given point, and the goal of the protocol is to ensure consistent snapshots across the network.<br>Being a node<br>Since not all nodes in Constellation are required for verifying every transaction, they run asynchronously with data flown through them. Each node has three key steps:<br>Gather: The node continuously gathers data bundles from neighbor nodes it is connected to.<br>Apply: It then reads the incoming bundles. The signatory data, along with the timestamps included, gives the node a unique view of the neighbor nodes and their distances from it. The node then uses the bundle to as a ‘tip’ to sign the incoming bundles in a way that the data dispersion is optimal over the network. If the node finds a conflict in the data in that process, a conflict resolution process is triggered (more on that later).<br>Scatter: Once the new bundles are created, they are sent across new nodes across the network through the gossip protocol.<br>Reputation of a node<br>The reputation of a node in a Blockchain network is often tied to its computational (proof-of-work), financial (proof-of-stake), or political (delegated-proof-of-stake) power. Constellation, on the other hand, ties the reputation to its behavior to the network and is relative to other nodes. Constellation proposes Proof of Reputable Observation (PRO), a novel reputation-based mechanism to incentivize nodes to act honestly.<br>Constellation associates a global reputation score to every node in the network. The score is calculated with a machine learning algorithm that takes into account the behavior of the node to the network. On top of that, each node can impose trust on other nodes based on, possibly, off-chain information. The node may choose to declare this trust to the network or keep it to itself.<br>It is important to note that the consensus mechanism in Constellation does not trigger with each transaction. Instead, when a node finds a conflict in some data, a conflict resolution mechanism is triggered that acts as the distributed consensus among the nodes. When choosing between two pieces of conflicting data, the node takes into account the reputation scores of the nodes who observed and signed that data, thus providing a proof of reputable observation. It also takes into account the trust flow across the nodes when deciding on the data, thus not solely depending on the global score.<br>How does a node verify a transaction?<br>Verifying a transaction simply means ensuring that the sender of the transaction has sufficient fund to initiate the transaction.<br>In a Blockchain, verifying a transaction is relatively easy for a node. A node has the entire Blockchain data. Hence, it is fairly straightforward to do a reverse-search of the transactions of the sender to find out if the sender has sufficient funds for initiating the transaction.<br>In Constellation, since nodes may not always have the entire state of the network, verifying a transaction is not as obvious. A node, according to the relative ordering of incoming data, picks a transaction from the mempool of unverified transactions or a regular block that requires more signature data. The node then looks for the snapshot data it has access to. If the snapshot data can confirm the validity of the transaction, the node marks the transaction has valid, signs it and puts it in the observation block before scattering it away. However, if it can not confirm the validity, depending on the computational power and ability of the node, it may simply sign and scatter away the transaction for someone else to validate it (thus merely providing an observation to the transaction). Otherwise, it can also send request for more snapshot data from reputed nodes with more data.<br>When does a transaction become valid?<br>In a Blockchain, once a transaction is included in a block with a valid nonce (proof of work by the node announcing the block), the block gets attached to the chain of previous blocks and the transaction (along with other transactions) in the block is deemed to be valid and notarized.<br>In Constellation, it works in an asynchronous fashion over the nodes in the network. A transaction is broadcasted to a set of nodes, gets verified, and gets included into blocks fairly quickly because of the asynchronous nature of the gossip protocol. When enough signatory data about the transaction is gathered into the block and it turns into a checkpoint block, the transaction is deemed to be valid. Since the checkpoint block (or rather the observation block version) is pointed to by other checkpoint blocks, this validity gets notarized and becomes tamper-proof.<br>In conclusion, the Constellation borrows from the best of both the worlds — traditional single partitioned Blockchains and decades of research in scalable technology. We will keep more updates on our technology coming as we continue performance testing and iterate testnet development.<br>Interested in becoming part of the Constellation network? We are looking for node operators who will host some of the early nodes on the network (in a testnet environment). You’d be providing valuable feedback, and earning $DAG tokens for doing so. You can register to run a node here."
  },
  {
    "name": "Seth V",
    "title": "What is a State Channel? Layer 0 vs. Layer 2",
    "description": "When comparing the differences between state channel implementations used as scaling solutions for blockchains, the terms isomorphic (i.e. Cardano’s Hydra layer 2 state channel) and hylomorphic (i.e. Constellation’s layer 0 state channel) are used.<br>What are the differences between the two and how does that impact interoperability and scalability? The answer lies in how mathematical theory is applied to computer science.<br>What is an Isomorphism?<br>Basically an isomorphism enables the ability to mathematically map one data type into a different data type so that the underlying information is retained and can be represented and referenced in a different system to be used for other mathematical operations and representations. This is what Cardano is doing to ensure validity and integrity of atomic swaps between their layer 1 ledger and their layer 2 isomorphic state channel. Basically Cardano treats their layer 1 as the settlement layer and their layer 2 as the computational layer for scaling up transactions and smart contracts. By using isomorphic state channels, Cardano essentially extends the layer 1 network in an organic way, avoiding the need to create a bridge into an independent layer 2 network which would require wrapping native assets and Plutus smart contracts, a problem which plagues most Ethereum L2s.<br>What is a Hylomorphism?<br>What Constellation has done is create a data type system that is capable of mathematically abstracting data types into a generalized algebraic geometric topology using higher dimensional category theory and homotopy theory. This level of mathematical abstraction allows for a layer 0 meta-network to mathematically model the data types and structures comprised within data streams generated from external networks and systems such as Layer 1 and Layer 2 Blockchains or private enterprise and governments systems.<br>What this means is you that can continuously map morphisms to morphisms with mathematical provenance, which allows for a hierarchy of complex data types to form and be represented within a directed acyclic graph as a geometric space. Because data is stored in this way it is essentially granted properties of a physical object that can be used to observe the state of information within it to form consensus in unique ways:<br>https://twitter.com/Conste11ation/status/1359953480585154561?s=20<br>Think of it as transposing 2 dimensional information into a 3 dimensional space. As a loose example, think of the computational geometry mathematics used by a 3D-code engine (Unity, Unreal, etc.) to generate textures and surfaces in a video game, however, in this case the data is immutable and can comprise of virtually any data type the state channel desires to validate and doesn’t require a graphics card or anything like that as your not actually rendering graphics. I only use this example to convey that the underlying theory of mathematical spaces can encompass a variety of concepts including matrixes, vector spaces, and manifolds. As an example, Wyatt Meldman-Floch, CTO & Co-founder, has referenced Smooth Manifold in various Hypergraph Hours and Coffee Talks.<br>Manifolds allow for complicated structures to be described in terms of well-understood topological properties of simpler spaces, making it easier to interact with. This technique is used when modeling the physical surface of an object in geometry and can also be used for modeling data into mathematical surfaces. Tessellation is another technique used to reason about surfaces which Wyatt has mentioned, this allows for splitting up a surface into smaller subsets that fit together, which is used in the generation of computer graphics.<br>Altogether this is studied as point-set topology or general topology with various branches including differential, geometric, and algebraic. Constellation Network can even use this to observe how all of these geometric spaces relate to one another in time (represented as a 4th dimension)...since space and time (aka space-time, theory of relativity) are mathematically bound to one another it enables asynchronous validation of concurrent events:<br>https://twitter.com/wyatt_noise/status/1362021748930093060?s=20<br>This is done using a series of Catamorphisms (folding) which break down a larger structure into a reduced value (“cata” for “down”), and Anamorphisms (unfolding) which builds a structure from a smaller set of values (“ana” for “up”). This creates a Hylomorphism, which in a technical operational order, is an ana-morphism followed by a catamorphism.<br>See the below graphic and corresponding folding and unfolding operations which creates what's called a Hylochain:<br>https://medium.com/hackernoon/dlt-scaling-through-the-hylochain-consensus-architecture-6970b1773c5b<br>A Hylochain is basically a tree of information that maintains the ability to mathematically compress and decompress different information without losing any data in the process or relegating that information into simplistic lower order type systems. At it’s core, this innovation is responsible for Constellation’s state channels to validate external complex big data structures onto the network as normalized data streams. Hylomorphisms solve both the data oraclization and data normalization problem at the level necessary to accommodate internet scale network traffic over a distributed ledger.<br>Layer 0 state channels are empowered as their own independent directed acyclic graph networks, inheriting all of the flexibility, scalability, and expressiveness the network has to offer. When you compare this to Layer 2 state channels, it quickly becomes apparent that they are simply designed to facilitate off chain processing of Layer 1 smart contract logic, meaning they are still bound to the associated Layer 1 network’s data type and validation logic limitations. The kicker is Constellation is infinitely scalable due to the microservices architecture and asynchronous consensus within each state channel which concurrently converges into the global asynchronous Hypergraph state.<br>Wyatt Meldman-Floch’s Cohomology whitepaper goes into detail on Constellation’s unique computational geometric framework which creates this mathematical topology for formally defining primitives of distributed ledgers using probabilistic algebraic abstraction. This creates a meta protocol using a statically typed meta language to define the boundaries between protocols. To summarize succinctly as possible; this incredible feat is accomplished through recursive data normalization by forming a hylochain of markovian hyperbolic spaces using a tessellated tetrahedron mathematical structure. This mathematical design dictates how the network is structured, how data is structured, and how data is processed:<br>TechCrunch Disrupt 2018 Presentation: https://youtu.be/fCscJL3_tdU?t=942<br>This coupled with the use of Java/Scala programming language makes it super easy to represent and formally verify information derived from external off chain data sources such as another Blockchain network or some IT database system without having to alter the underlying data structure. Because data normalization occurs at such a fundamental level within Constellation, a monadic execution context can be designed which abstracts away programming complexity by enabling developers with a high level API (application programming interface) to configure complex multi-source data pipelines and define customized consensus logic.<br>Constellation can map Cardano data types into a direct acyclic graph representation within the Hypergraph because of its ability to handle complex data structures, however, Cardano only developed their state channels to handle the data types that comprise their extended UTXO transactions. Its not configurable in the way Constellation’s state channel logic is and it doesn’t afford the flexibility to define custom consensus criteria. Their Hydra protocol is an isomorphic state channel that is technically a directed acyclic graph which can process and validate transactions asynchronously and concurrently but it is not capable of abstracting data types beyond that scope:<br>https://eprint.iacr.org/2020/299.pdf<br>That said, the Hydra protocol is quite impressive and can theoretically scale up to a million transactions per Hydra head (not to mention Hydra tails which I will not elaborate on here). All state channel solutions to date have been constrained by the data types that are supported by their scripting language and smart contract logic such as the examples of Raiden Network (Ethereum) and Lightning Network (Bitcoin).<br>Layer 0 is inclusive, not exclusive<br>The purpose of outlining the differences between layer 0 and layer 2 state channels is to emphasize how they can interoperate together and leverage each others strengths. By having Cardano integrate a Layer 2 Hydra state channel as a Layer 0 Constellation state channel, it will extend it’s ecosystem into a multi-chain network that shares the same values of mathematical integrity that functional programming and formal verification provides. This will enable Cardano to access a truly decentralized and interoperable order book of liquidity and allow its Dapps and integrations with SingularityNet’s AI agents to gain exposure to a greater network of customers by traversing Constellation’s meta-network Hypergraph Transfer Protocol (HGTP).<br>This integration, of course, extends to any layer 1 or layer 2 network out there and not just Cardano state channels.<br>I really believe in the value of coming together as an industry to execute on the vision of a society where we can imbue the qualities of immutability, transparency, security, and individual sovereignty into reshaping the systems of exchange that the modern world is built upon. If we want to upgrade to the Society 3.0 we all eagerly envision, we are going to need collectively strategize on executing it’s technological implementation. The sum will certainly need to be more than the parts in order for us to be successful.<br>Please refer to my previous article for more technical details about Constellation Network. I elaborate on additional synergies here: https://link.medium.com/49ZpEOGlJjb"
  }
]


